name: Test and Deploy
on:
  pull_request:
    branches:
      - main
  push:
  create:
    tags:
      - '*'
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        cache: pip
        cache-dependency-path: .github/workflows/workflow.yml
    - name: Black
      run: |
        pip install black
        black --check --exclude /docs --diff .

  test-extension:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7',  '3.8', '3.9', '3.10', '3.11-dev', 'pypy3.8']
        sphinx-version: ['>=2,<3', '>=3,<4', '>=4,<5', '>=5,<6', '==6.0.0b1']
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            .github/workflows/workflow.yml
            dev-requirements.txt
      - name: Install dependencies
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r dev-requirements.txt
          python -m pip install "sphinx${{ matrix.sphinx-version }}"
      - name: Install package
        run: |
          python -m pip install .
      - name: Run Tests for ${{ matrix.python-version }}
        run: |
          python -m pytest -vv

  build-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: pip
          cache-dependency-path: docs/requirements.txt
      - name: Install dependencies
        run: |
          pip install -r docs/requirements.txt
      - name: Build documentation
        run: |
          cd docs
          make html

  pypi-release:
    needs: test-extension
    runs-on: ubuntu-latest
    if: contains(github.ref, 'refs/tags/') && github.repository_owner == 'wpilibsuite'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: pip
          cache-dependency-path: dev-requirements.txt
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./dev-requirements.txt
      - name: Build PyPI Wheel
        run: |
          python setup.py sdist
          python setup.py bdist_wheel
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
